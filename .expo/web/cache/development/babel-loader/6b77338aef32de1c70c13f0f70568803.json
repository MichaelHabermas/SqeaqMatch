{"ast":null,"code":"var _jsxFileName = \"/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/GameOverScreen.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect } from \"react-redux\";\nimport NavButtonSection from \"../components/NavButtonSection\";\nimport Screen from \"../components/Screen\";\n\nfunction GameOverScreen(_ref) {\n  var navigation = _ref.navigation,\n      currentDeckName = _ref.currentDeckName,\n      currentLevel = _ref.currentLevel,\n      languageToLearn = _ref.languageToLearn;\n  return React.createElement(Screen, {\n    style: styles.screen,\n    screen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"Level: \", gameState.score, \" Complete!\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"Language: \", gameState.score), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Deck: \", gameState.score)), React.createElement(NavButtonSection, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {}\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentDeckName: state.matchAndMemory.gameSettings.currentDeckName,\n    currentLevel: state.matchAndMemory.gameSettings.currentLevel,\n    languageToLearn: state.matchAndMemory.gameSettings.languageToLearn\n  };\n};\n\nexport default connect(mapStateToProps)(GameOverScreen);","map":{"version":3,"sources":["/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/GameOverScreen.js"],"names":["React","connect","NavButtonSection","Screen","GameOverScreen","navigation","currentDeckName","currentLevel","languageToLearn","styles","screen","gameState","score","StyleSheet","create","mapStateToProps","state","matchAndMemory","gameSettings"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAOC,gBAAP;AACA,OAAOC,MAAP;;AAEA,SAASC,cAAT,OAKG;AAAA,MAJFC,UAIE,QAJFA,UAIE;AAAA,MAHFC,eAGE,QAHFA,eAGE;AAAA,MAFFC,YAEE,QAFFA,YAEE;AAAA,MADFC,eACE,QADFA,eACE;AACF,SACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAtB;AAA8B,IAAA,MAAM,EAAE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcC,SAAS,CAACC,KAAxB,eADD,EAEC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiBD,SAAS,CAACC,KAA3B,CAFD,EAGC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaD,SAAS,CAACC,KAAvB,CAHD,CADD,EAMC,oBAAC,gBAAD;AAAkB,IAAA,UAAU,EAAEP,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADD;AAUA;;AAED,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAChCJ,EAAAA,MAAM,EAAE;AADwB,CAAlB,CAAf;;AAIA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AACjCV,IAAAA,eAAe,EAAEU,KAAK,CAACC,cAAN,CAAqBC,YAArB,CAAkCZ,eADlB;AAEjCC,IAAAA,YAAY,EAAES,KAAK,CAACC,cAAN,CAAqBC,YAArB,CAAkCX,YAFf;AAGjCC,IAAAA,eAAe,EAAEQ,KAAK,CAACC,cAAN,CAAqBC,YAArB,CAAkCV;AAHlB,GAAL;AAAA,CAA7B;;AAMA,eAAeP,OAAO,CAACc,eAAD,CAAP,CAAyBX,cAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet } from \"react-native\";\n\n// redux\nimport { connect } from \"react-redux\";\n\n// components\nimport NavButtonSection from \"../components/NavButtonSection\";\nimport Screen from \"../components/Screen\";\n\nfunction GameOverScreen({\n\tnavigation,\n\tcurrentDeckName,\n\tcurrentLevel,\n\tlanguageToLearn,\n}) {\n\treturn (\n\t\t<Screen style={styles.screen} screen={true}>\n\t\t\t<View>\n\t\t\t\t<Text>Level: {gameState.score} Complete!</Text>\n\t\t\t\t<Text>Language: {gameState.score}</Text>\n\t\t\t\t<Text>Deck: {gameState.score}</Text>\n\t\t\t</View>\n\t\t\t<NavButtonSection navigation={navigation} />\n\t\t</Screen>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tscreen: {},\n});\n\nconst mapStateToProps = state => ({\n\tcurrentDeckName: state.matchAndMemory.gameSettings.currentDeckName,\n\tcurrentLevel: state.matchAndMemory.gameSettings.currentLevel,\n\tlanguageToLearn: state.matchAndMemory.gameSettings.languageToLearn,\n});\n\nexport default connect(mapStateToProps)(GameOverScreen);\n"]},"metadata":{},"sourceType":"module"}