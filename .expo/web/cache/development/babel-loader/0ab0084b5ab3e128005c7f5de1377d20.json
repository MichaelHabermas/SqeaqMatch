{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Habermoose/Desktop/speaq_rn/speaq_match/App.js\";\n\nimport React from \"react\";\nimport * as Font from \"expo-font\";\nimport { useFonts } from \"@use-expo/font\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport DetailScreen from \"./src/screens/DetailScreen\";\nimport { AppLoading } from \"expo\";\nvar appNavigator = createStackNavigator({\n  Home: HomeScreen,\n  Details: DetailScreen\n}, {\n  initialRouteName: \"Home\"\n});\nvar RootApp = createAppContainer(appNavigator);\nvar customFonts = {\n  Montserrat: require(\"./assets/fonts/montserrat.ttf\")\n};\n\nvar App = function App() {\n  var _useFonts = useFonts(customFonts),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      isLoaded = _useFonts2[0];\n\n  if (!isLoaded) {\n    return React.createElement(AppLoading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return React.createElement(RootApp, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Habermoose/Desktop/speaq_rn/speaq_match/App.js"],"names":["React","Font","useFonts","createAppContainer","createStackNavigator","HomeScreen","DetailScreen","AppLoading","appNavigator","Home","Details","initialRouteName","RootApp","customFonts","Montserrat","require","App","isLoaded"],"mappings":";;;;;AAiCA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP;AAGA,SAASC,UAAT,QAA2B,MAA3B;AAEA,IAAMC,YAAY,GAAGJ,oBAAoB,CACxC;AACCK,EAAAA,IAAI,EAAEJ,UADP;AAECK,EAAAA,OAAO,EAAEJ;AAFV,CADwC,EAKxC;AACCK,EAAAA,gBAAgB,EAAE;AADnB,CALwC,CAAzC;AAWA,IAAMC,OAAO,GAAGT,kBAAkB,CAACK,YAAD,CAAlC;AAEA,IAAMK,WAAW,GAAG;AACnBC,EAAAA,UAAU,EAAEC,OAAO;AADA,CAApB;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAEjB,kBAAmBd,QAAQ,CAACW,WAAD,CAA3B;AAAA;AAAA,MAAOI,QAAP;;AAEA,MAAI,CAACA,QAAL,EAAe;AACd,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAED,SAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,CATD;;AAWA,eAAeD,GAAf","sourcesContent":["// import React, { useState } from \"react\";\n// import { StatusBar } from \"expo-status-bar\";\n// import { StyleSheet, Text, View } from \"react-native\";\n// import * as Font from \"expo-font\";\n// import { AppLoading } from \"expo\";\n\n// const fetchFonts = () => {\n// \treturn Font.loadAsync({\n// \t\t\"alfa-slab-one\": require(\"./app/assets/fonts/AlfaSlabOne-Regular.ttf\"),\n// \t\t\"bowlby-one-sc\": require(\"./app/assets/fonts/BowlbyOneSC-Regular.ttf\"),\n// \t});\n// };\n\n// export default function App() {\n// const [fontLoaded, setFontLoaded] = useState(false);\n\n// \treturn (\n// \t\t<View style={styles.container}>\n// \t\t\t<Text>Working!</Text>\n// \t\t\t<StatusBar style=\"auto\" />\n// \t\t</View>\n// \t);\n// }\n\n// const styles = StyleSheet.create({\n// \tcontainer: {\n// \t\tflex: 1,\n// \t\tbackgroundColor: \"#fff\",\n// \t\talignItems: \"center\",\n// \t\tjustifyContent: \"center\",\n// \t},\n// });\n\nimport React from \"react\";\nimport * as Font from \"expo-font\";\nimport { useFonts } from \"@use-expo/font\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport DetailScreen from \"./src/screens/DetailScreen\";\n// import AppLoading helper\n//https://docs.expo.io/versions/latest/sdk/app-loading/\nimport { AppLoading } from \"expo\";\n\nconst appNavigator = createStackNavigator(\n\t{\n\t\tHome: HomeScreen,\n\t\tDetails: DetailScreen,\n\t},\n\t{\n\t\tinitialRouteName: \"Home\",\n\t}\n);\n\n// instead of immediately exporting the AppNavigator component we assign in to a constant.\nconst RootApp = createAppContainer(appNavigator);\n// require in the font\nconst customFonts = {\n\tMontserrat: require(\"./assets/fonts/montserrat.ttf\"),\n};\n\nconst App = () => {\n\t// the same as Font.loadAsync , the hook returns  true | error\n\tconst [isLoaded] = useFonts(customFonts);\n\n\tif (!isLoaded) {\n\t\treturn <AppLoading />;\n\t}\n\t// from the custom App we return the component we assigned to RootApp.\n\treturn <RootApp />;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}