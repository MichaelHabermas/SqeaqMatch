{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\Documents\\\\michaelthegreat\\\\speaq_match\\\\app\\\\components\\\\LevelSelectionContainer.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport LevelCard from \"./LevelCard\";\n\nfunction LevelSelectionContainer(_ref) {\n  var _this = this;\n\n  var handleLevelSelection = _ref.handleLevelSelection,\n      levelCards = _ref.levelCards;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.subContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, levelCards.map(function (levelCard, index) {\n    return React.createElement(LevelCard, {\n      key: index,\n      isSelected: levelCard.isSelected,\n      handleLevelSelection: handleLevelSelection,\n      level: levelCard.level,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    });\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    alignSelf: \"center\",\n    bottom: 0,\n    height: \"70%\",\n    left: \"10%\",\n    marginBottom: Platform.OS === \"ios\" ? -35 : 0,\n    position: \"absolute\",\n    width: \"90%\"\n  },\n  subContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    height: \"100%\",\n    width: \"100%\"\n  }\n});\nexport default LevelSelectionContainer;","map":{"version":3,"sources":["C:/Users/super/Documents/michaelthegreat/speaq_match/app/components/LevelSelectionContainer.js"],"names":["React","useState","LevelCard","LevelSelectionContainer","handleLevelSelection","levelCards","styles","container","subContainer","map","levelCard","index","isSelected","level","StyleSheet","create","alignSelf","bottom","height","left","marginBottom","Platform","OS","position","width","flexDirection","flexWrap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,OAAOC,SAAP;;AAEA,SAASC,uBAAT,OAAuE;AAAA;;AAAA,MAApCC,oBAAoC,QAApCA,oBAAoC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACtE,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,UAAD;AAAY,IAAA,4BAA4B,EAAE,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,UAAU,CAACI,GAAX,CAAe,UAACC,SAAD,EAAYC,KAAZ;AAAA,WACf,oBAAC,SAAD;AACC,MAAA,GAAG,EAAEA,KADN;AAEC,MAAA,UAAU,EAAED,SAAS,CAACE,UAFvB;AAGC,MAAA,oBAAoB,EAAER,oBAHvB;AAIC,MAAA,KAAK,EAAEM,SAAS,CAACG,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe;AAAA,GAAf,CADF,CADD,CADD,CADD;AAgBA;;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAChCR,EAAAA,SAAS,EAAE;AACVS,IAAAA,SAAS,EAAE,QADD;AAEVC,IAAAA,MAAM,EAAE,CAFE;AAGVC,IAAAA,MAAM,EAAE,KAHE;AAIVC,IAAAA,IAAI,EAAE,KAJI;AAKVC,IAAAA,YAAY,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAC,EAAzB,GAA8B,CALlC;AAMVC,IAAAA,QAAQ,EAAE,UANA;AAOVC,IAAAA,KAAK,EAAE;AAPG,GADqB;AAUhChB,EAAAA,YAAY,EAAE;AACbiB,IAAAA,aAAa,EAAE,KADF;AAEbC,IAAAA,QAAQ,EAAE,MAFG;AAGbR,IAAAA,MAAM,EAAE,MAHK;AAIbM,IAAAA,KAAK,EAAE;AAJM;AAVkB,CAAlB,CAAf;AAkBA,eAAerB,uBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, ScrollView, StyleSheet, Platform } from \"react-native\";\r\n\r\nimport LevelCard from \"./LevelCard\";\r\n\r\nfunction LevelSelectionContainer({ handleLevelSelection, levelCards }) {\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<ScrollView showsVerticalScrollIndicator={false}>\r\n\t\t\t\t<View style={styles.subContainer}>\r\n\t\t\t\t\t{levelCards.map((levelCard, index) => (\r\n\t\t\t\t\t\t<LevelCard\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tisSelected={levelCard.isSelected}\r\n\t\t\t\t\t\t\thandleLevelSelection={handleLevelSelection}\r\n\t\t\t\t\t\t\tlevel={levelCard.level}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</View>\r\n\t\t\t</ScrollView>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\talignSelf: \"center\",\r\n\t\tbottom: 0,\r\n\t\theight: \"70%\",\r\n\t\tleft: \"10%\", // TODO: fix with Constants (width of screen - width of container / 2) (unless this works)\r\n\t\tmarginBottom: Platform.OS === \"ios\" ? -35 : 0, // TODO: fix all these with Constants\r\n\t\tposition: \"absolute\",\r\n\t\twidth: \"90%\",\r\n\t},\r\n\tsubContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tflexWrap: \"wrap\",\r\n\t\theight: \"100%\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n});\r\n\r\nexport default LevelSelectionContainer;\r\n"]},"metadata":{},"sourceType":"module"}