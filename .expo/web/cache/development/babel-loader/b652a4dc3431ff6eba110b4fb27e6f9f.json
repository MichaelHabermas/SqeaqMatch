{"ast":null,"code":"var _jsxFileName = \"/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/components/GameCard.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nfunction GameCard(_ref) {\n  var card = _ref.card,\n      onPress = _ref.onPress,\n      _ref$inStreak = _ref.inStreak,\n      inStreak = _ref$inStreak === void 0 ? false : _ref$inStreak;\n  return React.createElement(React.Fragment, null, inStreak && React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.card,\n    source: require(\"../assets/cards/card_back.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 6\n    }\n  })), !inStreak && React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.card,\n    source: require(\"../assets/cards/card_front.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }\n  }), React.createElement(Image, {\n    style: styles.card,\n    source: card.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 10,\n    marginRight: 10,\n    borderColor: \"green\",\n    borderWidth: 1,\n    width: \"32%\",\n    height: \"100%\"\n  },\n  card: {\n    position: \"absolute\",\n    resizeMode: \"contain\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  cardBack: {},\n  cardFace: {\n    position: \"absolute\"\n  }\n});\nexport default GameCard;","map":{"version":3,"sources":["/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/components/GameCard.js"],"names":["React","GameCard","card","onPress","inStreak","styles","container","require","image","StyleSheet","create","marginBottom","marginRight","borderColor","borderWidth","width","height","position","resizeMode","cardBack","cardFace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAGA,SAASC,QAAT,OAAuD;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,2BAApBC,QAAoB;AAAA,MAApBA,QAAoB,8BAAT,KAAS;AACtD,SACC,0CACEA,QAAQ,IACR,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAED,OAA3B;AAAoC,IAAA,KAAK,EAAEE,MAAM,CAACC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACC,IAAA,KAAK,EAAED,MAAM,CAACH,IADf;AAEC,IAAA,MAAM,EAAEK,OAAO,iCAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFF,EASE,CAACH,QAAD,IACA,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAED,OAA3B;AAAoC,IAAA,KAAK,EAAEE,MAAM,CAACC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACC,IAAA,KAAK,EAAED,MAAM,CAACH,IADf;AAEC,IAAA,MAAM,EAAEK,OAAO,kCAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAKC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,MAAM,CAACH,IAArB;AAA2B,IAAA,MAAM,EAAEA,IAAI,CAACM,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CAVF,CADD;AAqBA;;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAChCJ,EAAAA,SAAS,EAAE;AACVK,IAAAA,YAAY,EAAE,EADJ;AAEVC,IAAAA,WAAW,EAAE,EAFH;AAGVC,IAAAA,WAAW,EAAE,OAHH;AAIVC,IAAAA,WAAW,EAAE,CAJH;AAKVC,IAAAA,KAAK,EAAE,KALG;AAMVC,IAAAA,MAAM,EAAE;AANE,GADqB;AAShCd,EAAAA,IAAI,EAAE;AACLe,IAAAA,QAAQ,EAAE,UADL;AAGLC,IAAAA,UAAU,EAAE,SAHP;AAILH,IAAAA,KAAK,EAAE,MAJF;AAKLC,IAAAA,MAAM,EAAE;AALH,GAT0B;AAgBhCG,EAAAA,QAAQ,EAAE,EAhBsB;AAiBhCC,EAAAA,QAAQ,EAAE;AACTH,IAAAA,QAAQ,EAAE;AADD;AAjBsB,CAAlB,CAAf;AAsBA,eAAehB,QAAf","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, Image, TouchableOpacity } from \"react-native\";\n\nfunction GameCard({ card, onPress, inStreak = false }) {\n\treturn (\n\t\t<>\n\t\t\t{inStreak && (\n\t\t\t\t<TouchableOpacity onPress={onPress} style={styles.container}>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tstyle={styles.card}\n\t\t\t\t\t\tsource={require(\"../assets/cards/card_back.png\")}\n\t\t\t\t\t/>\n\t\t\t\t</TouchableOpacity>\n\t\t\t)}\n\t\t\t{!inStreak && (\n\t\t\t\t<TouchableOpacity onPress={onPress} style={styles.container}>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tstyle={styles.card}\n\t\t\t\t\t\tsource={require(\"../assets/cards/card_front.png\")}\n\t\t\t\t\t/>\n\t\t\t\t\t<Image style={styles.card} source={card.image} />\n\t\t\t\t</TouchableOpacity>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tmarginBottom: 10,\n\t\tmarginRight: 10,\n\t\tborderColor: \"green\",\n\t\tborderWidth: 1,\n\t\twidth: \"32%\",\n\t\theight: \"100%\",\n\t},\n\tcard: {\n\t\tposition: \"absolute\",\n\n\t\tresizeMode: \"contain\",\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\tcardBack: {},\n\tcardFace: {\n\t\tposition: \"absolute\",\n\t},\n});\n\nexport default GameCard;\n"]},"metadata":{},"sourceType":"module"}