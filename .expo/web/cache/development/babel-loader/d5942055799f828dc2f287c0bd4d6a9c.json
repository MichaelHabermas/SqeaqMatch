{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/UserProfileScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../store/profileAction\";\nimport ButtonMain from \"../components/ButtonMain\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"../components/Screen\";\nimport ScreenHeader from \"../components/ScreenHeader\";\nimport OptionsButton from \"../components/OptionsButton\";\nimport Text from \"../components/Text\";\nvar initialProfile = {\n  gender: \"\",\n  language_to_learn: \"french\"\n};\n\nfunction UserProfileScreen(_ref) {\n  var navigation = _ref.navigation,\n      gameState = _ref.gameState,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(initialProfile),\n      _useState2 = _slicedToArray(_useState, 2),\n      newProfile = _useState2[0],\n      setNewProfile = _useState2[1];\n\n  console.log(\"profile screen state\", gameState);\n\n  var handleSaveProfile = function handleSaveProfile() {\n    dispatch(setProfile(newProfile));\n    navigation.navigate(\"LevelSelect\");\n  };\n\n  return React.createElement(Screen, {\n    screen: true,\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, React.createElement(ScreenHeader, {\n    navLeft: function navLeft() {\n      return navigation.goBack();\n    },\n    navLeftIcon: require(\"../assets/buttons/back_icon_dark.png\"),\n    showRightButton: false,\n    title: \"User Profile\",\n    titleOffset: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.optionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.optionLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, \"Gender\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      console.log(\" Gender help is pushed\");\n    },\n    style: styles.genderInfoButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  }, React.createElement(Image, {\n    style: styles.genderHelp,\n    source: require(\"../assets/buttons/help_icon_light.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }))), React.createElement(View, {\n    style: styles.genderButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(OptionsButton, {\n    name: \"Male\",\n    onPress: function onPress() {\n      console.log(\"male button pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }), React.createElement(OptionsButton, {\n    name: \"Female\",\n    onPress: function onPress() {\n      console.log(\"female button pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }))), React.createElement(View, {\n    style: styles.optionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.optionLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, \"Language\")), React.createElement(View, {\n    style: styles.genderButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(OptionsButton, {\n    name: \"Italian\",\n    onPress: function onPress() {\n      console.log(\"italian button pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }))), React.createElement(ButtonMain, {\n    onPress: handleSaveProfile,\n    style: styles.saveButton,\n    title: \"Save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {},\n  genderButtons: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\"\n  },\n  genderInfoButton: {\n    backgroundColor: defaultStyles.colors.gold,\n    borderRadius: 13,\n    position: \"absolute\",\n    top: 0,\n    right: -20,\n    height: 26,\n    width: 26\n  },\n  genderHelp: {\n    resizeMode: \"contain\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  optionsContainer: {\n    alignItems: \"center\",\n    marginVertical: 40\n  },\n  optionLabel: {\n    marginBottom: 10\n  },\n  optionText: {\n    fontSize: 50,\n    color: defaultStyles.colors.white\n  },\n  saveButton: {\n    width: \"100%\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    gameState: state.matchAndMemory\n  };\n};\n\nexport default connect(mapStateToProps)(UserProfileScreen);","map":{"version":3,"sources":["/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/UserProfileScreen.js"],"names":["React","useState","connect","setProfile","ButtonMain","defaultStyles","Screen","ScreenHeader","OptionsButton","Text","initialProfile","gender","language_to_learn","UserProfileScreen","navigation","gameState","dispatch","newProfile","setNewProfile","console","log","handleSaveProfile","navigate","styles","screen","goBack","require","optionsContainer","optionLabel","optionText","genderInfoButton","genderHelp","genderButtons","saveButton","StyleSheet","create","flexDirection","width","justifyContent","backgroundColor","colors","gold","borderRadius","position","top","right","height","resizeMode","alignItems","marginVertical","marginBottom","fontSize","color","white","mapStateToProps","state","matchAndMemory"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, TouchableOpacity, View, Image } from \"react-native\";\n\n// redux\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../store/profileAction\";\n\n// components\nimport ButtonMain from \"../components/ButtonMain\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"../components/Screen\";\nimport ScreenHeader from \"../components/ScreenHeader\";\nimport OptionsButton from \"../components/OptionsButton\";\nimport Text from \"../components/Text\";\n\nconst initialProfile = {\n\tgender: \"\",\n\tlanguage_to_learn: \"french\",\n};\n\nfunction UserProfileScreen({ navigation, gameState, dispatch }) {\n\tconst [newProfile, setNewProfile] = useState(initialProfile);\n\n\tconsole.log(\"profile screen state\", gameState);\n\n\tconst handleSaveProfile = () => {\n\t\tdispatch(setProfile(newProfile));\n\t\tnavigation.navigate(\"LevelSelect\");\n\t};\n\n\treturn (\n\t\t<Screen screen={true} style={styles.screen}>\n\t\t\t<ScreenHeader\n\t\t\t\tnavLeft={() => navigation.goBack()}\n\t\t\t\tnavLeftIcon={require(\"../assets/buttons/back_icon_dark.png\")}\n\t\t\t\tshowRightButton={false}\n\t\t\t\ttitle=\"User Profile\"\n\t\t\t\ttitleOffset={20}\n\t\t\t/>\n\t\t\t<View style={styles.optionsContainer}>\n\t\t\t\t<View style={styles.optionLabel}>\n\t\t\t\t\t<Text style={styles.optionText}>Gender</Text>\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t// TODO: insert modal for gender info\n\t\t\t\t\t\t\tconsole.log(\" Gender help is pushed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={styles.genderInfoButton}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tstyle={styles.genderHelp}\n\t\t\t\t\t\t\tsource={require(\"../assets/buttons/help_icon_light.png\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={styles.genderButtons}>\n\t\t\t\t\t<OptionsButton\n\t\t\t\t\t\tname=\"Male\"\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tconsole.log(\"male button pressed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<OptionsButton\n\t\t\t\t\t\tname=\"Female\"\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tconsole.log(\"female button pressed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t<View style={styles.optionsContainer}>\n\t\t\t\t<View style={styles.optionLabel}>\n\t\t\t\t\t<Text style={styles.optionText}>Language</Text>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.genderButtons}>\n\t\t\t\t\t<OptionsButton\n\t\t\t\t\t\tname=\"Italian\"\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tconsole.log(\"italian button pressed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t<ButtonMain\n\t\t\t\tonPress={handleSaveProfile}\n\t\t\t\tstyle={styles.saveButton}\n\t\t\t\ttitle=\"Save\"\n\t\t\t/>\n\t\t</Screen>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tscreen: {},\n\tgenderButtons: {\n\t\tflexDirection: \"row\",\n\t\twidth: \"100%\",\n\t\tjustifyContent: \"space-evenly\",\n\t},\n\tgenderInfoButton: {\n\t\tbackgroundColor: defaultStyles.colors.gold,\n\t\tborderRadius: 13,\n\t\tposition: \"absolute\",\n\t\ttop: 0,\n\t\tright: -20,\n\t\theight: 26,\n\t\twidth: 26,\n\t},\n\tgenderHelp: {\n\t\tresizeMode: \"contain\",\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\toptionsContainer: {\n\t\talignItems: \"center\",\n\t\tmarginVertical: 40,\n\t},\n\toptionLabel: { marginBottom: 10 },\n\toptionText: {\n\t\tfontSize: 50,\n\t\tcolor: defaultStyles.colors.white,\n\t},\n\tsaveButton: {\n\t\twidth: \"100%\",\n\t},\n});\n\nconst mapStateToProps = state => ({\n\tgameState: state.matchAndMemory,\n});\n\n// const mapActionsToProps = {\n// \tdispatch,\n// };\n\nexport default connect(mapStateToProps)(UserProfileScreen);\n"]},"metadata":{},"sourceType":"module"}