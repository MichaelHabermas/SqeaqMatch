{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\super\\\\Documents\\\\michaelthegreat\\\\speaq_match\\\\app\\\\components\\\\VertScrollSelector.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { connect } from \"react-redux\";\nimport Text from \"../components/Text\";\nimport scrollIndicator from \"../assets/lang_marker.png\";\nimport defaultStyles from \"../config/styles\";\nvar CARD_WIDTH = 190;\nvar SPACING_FOR_CARD_INSET = 60;\n\nfunction VertScrollSelector(_ref) {\n  var _this = this;\n\n  var profile = _ref.profile,\n      scrollOptions = _ref.scrollOptions,\n      setNewProfile = _ref.setNewProfile,\n      style = _ref.style;\n\n  var handleScroll = function handleScroll(event) {\n    var contentOffset = event.nativeEvent.contentOffset;\n    var x = contentOffset.x,\n        y = contentOffset.y;\n    var index = Math.round(x / CARD_WIDTH);\n    setNewProfile(_objectSpread(_objectSpread({}, profile), {}, {\n      languageToLearn: scrollOptions[index] ? scrollOptions[index].toLowerCase() : scrollOptions[0].toLowerCase()\n    }));\n  };\n\n  return React.createElement(View, {\n    style: [styles.container, style],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    source: scrollIndicator,\n    style: styles.indicator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }), React.createElement(ScrollView, {\n    contentContainerStyle: {\n      paddingHorizontal: Platform.OS === \"android\" ? SPACING_FOR_CARD_INSET : 0\n    },\n    contentInset: {\n      top: 0,\n      left: SPACING_FOR_CARD_INSET,\n      bottom: 0,\n      right: SPACING_FOR_CARD_INSET\n    },\n    decelerationRate: \"fast\",\n    horizontal: true,\n    onScroll: function onScroll(e) {\n      return handleScroll(e);\n    },\n    scrollEventThrottle: 16000,\n    showsHorizontalScrollIndicator: false,\n    snapToAlignment: \"center\",\n    snapToInterval: CARD_WIDTH + 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, scrollOptions.map(function (option, index) {\n    return React.createElement(View, {\n      key: index,\n      style: styles.option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.optionText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }\n    }, option));\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: defaultStyles.colors.white,\n    borderRadius: 50,\n    height: 60,\n    justifyContent: \"center\",\n    width: 100\n  },\n  indicator: {\n    position: \"absolute\",\n    alignSelf: \"center\"\n  },\n  option: {\n    alignItems: \"center\",\n    backgroundColor: \"transparent\",\n    justifyContent: \"center\",\n    marginHorizontal: 5,\n    width: CARD_WIDTH\n  },\n  optionText: {\n    color: defaultStyles.colors.light_blue,\n    fontSize: 35,\n    textShadowColor: \"rgba(0, 0, 0, 0.0)\",\n    textShadowOffset: {\n      height: 0,\n      width: 0\n    },\n    textShadowRadius: 0\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    gameState: state.matchAndMemory\n  };\n};\n\nexport default connect(mapStateToProps)(VertScrollSelector);","map":{"version":3,"sources":["C:/Users/super/Documents/michaelthegreat/speaq_match/app/components/VertScrollSelector.js"],"names":["React","connect","Text","scrollIndicator","defaultStyles","CARD_WIDTH","SPACING_FOR_CARD_INSET","VertScrollSelector","profile","scrollOptions","setNewProfile","style","handleScroll","event","contentOffset","nativeEvent","x","y","index","Math","round","languageToLearn","toLowerCase","styles","container","indicator","paddingHorizontal","Platform","OS","top","left","bottom","right","e","map","option","optionText","StyleSheet","create","backgroundColor","colors","white","borderRadius","height","justifyContent","width","position","alignSelf","alignItems","marginHorizontal","color","light_blue","fontSize","textShadowColor","textShadowOffset","textShadowRadius","mapStateToProps","state","gameState","matchAndMemory"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, ScrollView, Image, Platform } from \"react-native\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// components\r\nimport Text from \"../components/Text\";\r\n\r\n// assets\r\nimport scrollIndicator from \"../assets/lang_marker.png\";\r\n\r\n// styling\r\nimport defaultStyles from \"../config/styles\";\r\n\r\n// temp variables\r\nconst CARD_WIDTH = 190;\r\nconst SPACING_FOR_CARD_INSET = 60;\r\n\r\nfunction VertScrollSelector({ profile, scrollOptions, setNewProfile, style }) {\r\n\tconst handleScroll = event => {\r\n\t\tconst { contentOffset } = event.nativeEvent;\r\n\t\tconst { x, y } = contentOffset;\r\n\t\tconst index = Math.round(x / CARD_WIDTH);\r\n\t\tsetNewProfile({\r\n\t\t\t...profile,\r\n\t\t\tlanguageToLearn: scrollOptions[index]\r\n\t\t\t\t? scrollOptions[index].toLowerCase()\r\n\t\t\t\t: scrollOptions[0].toLowerCase(), // needed to prevent an 'undefined object' bug\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={[styles.container, style]}>\r\n\t\t\t<Image source={scrollIndicator} style={styles.indicator} />\r\n\t\t\t<ScrollView\r\n\t\t\t\tcontentContainerStyle={{\r\n\t\t\t\t\t// contentInset alternative for Android\r\n\t\t\t\t\tpaddingHorizontal:\r\n\t\t\t\t\t\tPlatform.OS === \"android\" ? SPACING_FOR_CARD_INSET : 0, // Horizontal spacing before and after the ScrollView\r\n\t\t\t\t}}\r\n\t\t\t\tcontentInset={{\r\n\t\t\t\t\t// iOS ONLY\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tleft: SPACING_FOR_CARD_INSET, // Left spacing for the very first card\r\n\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\tright: SPACING_FOR_CARD_INSET, // Right spacing for the very last card\r\n\t\t\t\t}}\r\n\t\t\t\tdecelerationRate=\"fast\"\r\n\t\t\t\thorizontal // Change the direction to horizontal\r\n\t\t\t\tonScroll={e => handleScroll(e)}\r\n\t\t\t\tscrollEventThrottle={16000} // Reduce the number of events fired\r\n\t\t\t\tshowsHorizontalScrollIndicator={false}\r\n\t\t\t\tsnapToAlignment=\"center\"\r\n\t\t\t\tsnapToInterval={CARD_WIDTH + 10} // Calculate the size for a card including marginLeft and marginRight\r\n\t\t\t>\r\n\t\t\t\t{scrollOptions.map((option, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<View key={index} style={styles.option}>\r\n\t\t\t\t\t\t\t<Text style={styles.optionText}>{option}</Text>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ScrollView>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tbackgroundColor: defaultStyles.colors.white,\r\n\t\tborderRadius: 50,\r\n\t\theight: 60,\r\n\t\tjustifyContent: \"center\",\r\n\t\twidth: 100,\r\n\t},\r\n\tindicator: { position: \"absolute\", alignSelf: \"center\" },\r\n\toption: {\r\n\t\talignItems: \"center\",\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tmarginHorizontal: 5,\r\n\t\twidth: CARD_WIDTH,\r\n\t},\r\n\toptionText: {\r\n\t\tcolor: defaultStyles.colors.light_blue,\r\n\t\tfontSize: 35,\r\n\t\ttextShadowColor: \"rgba(0, 0, 0, 0.0)\",\r\n\t\ttextShadowOffset: {\r\n\t\t\theight: 0,\r\n\t\t\twidth: 0,\r\n\t\t},\r\n\t\ttextShadowRadius: 0,\r\n\t},\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n\tgameState: state.matchAndMemory,\r\n});\r\n\r\nexport default connect(mapStateToProps)(VertScrollSelector);\r\n"]},"metadata":{},"sourceType":"module"}