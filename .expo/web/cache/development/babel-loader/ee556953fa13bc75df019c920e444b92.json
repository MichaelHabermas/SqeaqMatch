{"ast":null,"code":"var _jsxFileName = \"/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/GameOverScreen.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from \"react-redux\";\nimport NavButtonSection from \"../components/NavButtonSection\";\nimport Screen from \"../components/Screen\";\nimport Text from \"../components/Text\";\n\nfunction GameOverScreen(_ref) {\n  var navigation = _ref.navigation,\n      currentDeckName = _ref.currentDeckName,\n      currentLevel = _ref.currentLevel,\n      languageToLearn = _ref.languageToLearn;\n  return React.createElement(Screen, {\n    style: styles.screen,\n    screen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.gameOverText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"Level \", currentLevel, \" Complete!\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Language: \", languageToLearn), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"Deck: \", currentDeckName)), React.createElement(NavButtonSection, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {},\n  gameOverText: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentDeckName: state.matchAndMemory.gameSettings.currentDeckName,\n    currentLevel: state.matchAndMemory.gameSettings.currentLevel,\n    languageToLearn: state.matchAndMemory.gameSettings.languageToLearn\n  };\n};\n\nexport default connect(mapStateToProps)(GameOverScreen);","map":{"version":3,"sources":["/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/GameOverScreen.js"],"names":["React","connect","NavButtonSection","Screen","Text","GameOverScreen","navigation","currentDeckName","currentLevel","languageToLearn","styles","screen","gameOverText","StyleSheet","create","display","flex","flexDirection","alignItems","justifyContent","mapStateToProps","state","matchAndMemory","gameSettings"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAIA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAOC,gBAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;;AAEA,SAASC,cAAT,OAKG;AAAA,MAJFC,UAIE,QAJFA,UAIE;AAAA,MAHFC,eAGE,QAHFA,eAGE;AAAA,MAFFC,YAEE,QAFFA,YAEE;AAAA,MADFC,eACE,QADFA,eACE;AACF,SACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAtB;AAA8B,IAAA,MAAM,EAAE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaJ,YAAb,eADD,EAEC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiBC,eAAjB,CAFD,EAGC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaF,eAAb,CAHD,CADD,EAMC,oBAAC,gBAAD;AAAkB,IAAA,UAAU,EAAED,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADD;AAUA;;AAED,IAAMI,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAChCH,EAAAA,MAAM,EAAE,EADwB;AAEhCC,EAAAA,YAAY,EAAE;AACbG,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,IAAI,EAAE,CAFO;AAGbC,IAAAA,aAAa,EAAE,QAHF;AAIbC,IAAAA,UAAU,EAAE,QAJC;AAKbC,IAAAA,cAAc,EAAE;AALH;AAFkB,CAAlB,CAAf;;AAWA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AACjCd,IAAAA,eAAe,EAAEc,KAAK,CAACC,cAAN,CAAqBC,YAArB,CAAkChB,eADlB;AAEjCC,IAAAA,YAAY,EAAEa,KAAK,CAACC,cAAN,CAAqBC,YAArB,CAAkCf,YAFf;AAGjCC,IAAAA,eAAe,EAAEY,KAAK,CAACC,cAAN,CAAqBC,YAArB,CAAkCd;AAHlB,GAAL;AAAA,CAA7B;;AAMA,eAAeR,OAAO,CAACmB,eAAD,CAAP,CAAyBf,cAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\n// redux\nimport { connect } from \"react-redux\";\n\n// components\nimport NavButtonSection from \"../components/NavButtonSection\";\nimport Screen from \"../components/Screen\";\nimport Text from \"../components/Text\";\n\nfunction GameOverScreen({\n\tnavigation,\n\tcurrentDeckName,\n\tcurrentLevel,\n\tlanguageToLearn,\n}) {\n\treturn (\n\t\t<Screen style={styles.screen} screen={true}>\n\t\t\t<View style={styles.gameOverText}>\n\t\t\t\t<Text>Level {currentLevel} Complete!</Text>\n\t\t\t\t<Text>Language: {languageToLearn}</Text>\n\t\t\t\t<Text>Deck: {currentDeckName}</Text>\n\t\t\t</View>\n\t\t\t<NavButtonSection navigation={navigation} />\n\t\t</Screen>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tscreen: {},\n\tgameOverText: {\n\t\tdisplay: \"flex\",\n\t\tflex: 1,\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n});\n\nconst mapStateToProps = state => ({\n\tcurrentDeckName: state.matchAndMemory.gameSettings.currentDeckName,\n\tcurrentLevel: state.matchAndMemory.gameSettings.currentLevel,\n\tlanguageToLearn: state.matchAndMemory.gameSettings.languageToLearn,\n});\n\nexport default connect(mapStateToProps)(GameOverScreen);\n"]},"metadata":{},"sourceType":"module"}