{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/UserProfileScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../store/MandMActions\";\nimport ButtonMain from \"../components/ButtonMain\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"../components/Screen\";\nimport ScreenHeader from \"../components/ScreenHeader\";\nimport OptionsButton from \"../components/OptionsButton\";\nimport Text from \"../components/Text\";\nimport VertScrollSelector from \"../components/VertScrollSelector\";\nvar scrollOptions = [\"English\", \"Spanish\", \"French\", \"Italian\", \"German\", \"Russian\"];\n\nfunction UserProfileScreen(_ref) {\n  var dispatch = _ref.dispatch,\n      navigation = _ref.navigation,\n      gender = _ref.gender,\n      userLanguage = _ref.userLanguage;\n\n  var _useState = useState({\n    gender: gender,\n    userLanguage: userLanguage,\n    languageToLearn: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      newProfile = _useState2[0],\n      setNewProfile = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFemale = _useState4[0],\n      setIsFemale = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  useEffect(function () {\n    setNewProfile({\n      gender: gender,\n      userLanguage: userLanguage,\n      languageToLearn: null\n    });\n  }, []);\n  console.log(\"newProfile: \", newProfile);\n\n  var handleSelectGender = function handleSelectGender(gender) {\n    setIsFemale(gender === \"female\");\n    setNewProfile(_objectSpread(_objectSpread({}, newProfile), {}, {\n      gender: gender\n    }));\n  };\n\n  var handleSaveProfile = function handleSaveProfile() {\n    dispatch(setProfile(newProfile));\n    navigation.navigate(\"LevelSelect\");\n  };\n\n  return React.createElement(Screen, {\n    screen: true,\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Some languages affect the words or conjugations they use depending on the gender of the speaker and/or the responder.\"), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }\n  }, \"Hide Modal\"))))), React.createElement(ScreenHeader, {\n    navLeft: function navLeft() {\n      return navigation.goBack();\n    },\n    navLeftIcon: require(\"../assets/buttons/back_icon_dark.png\"),\n    showRightButton: false,\n    title: \"User Profile\",\n    titleOffset: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.optionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.optionLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    fontFam: \"bowlby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }\n  }, \"Gender\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n      console.log(\" Gender help is pushed\");\n    },\n    style: styles.genderInfoButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  }, React.createElement(Image, {\n    style: styles.genderHelp,\n    source: require(\"../assets/buttons/help_icon_light.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }))), React.createElement(View, {\n    style: styles.genderButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, React.createElement(OptionsButton, {\n    isSelected: isFemale,\n    onPress: function onPress() {\n      return handleSelectGender(\"female\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }\n  }, \"Female\"), React.createElement(OptionsButton, {\n    isSelected: !isFemale,\n    onPress: function onPress() {\n      return handleSelectGender(\"male\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 6\n    }\n  }, \"Male\"))), React.createElement(View, {\n    style: styles.optionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.optionLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    fontFam: \"bowlby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 6\n    }\n  }, \"Learning\")), React.createElement(View, {\n    style: styles.languageField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, React.createElement(VertScrollSelector, {\n    scrollOptions: scrollOptions,\n    style: styles.languageSelector,\n    setNewProfile: setNewProfile,\n    profile: newProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 6\n    }\n  }))), newProfile.languageToLearn && React.createElement(ButtonMain, {\n    onPress: handleSaveProfile,\n    style: styles.saveButton,\n    title: \"Save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {},\n  genderButtons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\"\n  },\n  genderHelp: {\n    height: \"100%\",\n    resizeMode: \"contain\",\n    width: \"100%\"\n  },\n  genderInfoButton: {\n    backgroundColor: defaultStyles.colors.gold,\n    borderRadius: 13,\n    height: 26,\n    position: \"absolute\",\n    right: -20,\n    top: 0,\n    width: 26\n  },\n  languageField: {\n    width: \"80%\"\n  },\n  languageSelector: {\n    width: \"100%\"\n  },\n  optionsContainer: {\n    alignItems: \"center\",\n    marginVertical: 30\n  },\n  optionLabel: {},\n  optionText: {\n    color: defaultStyles.colors.white,\n    fontSize: 50\n  },\n  saveButton: {\n    marginTop: 80,\n    width: \"100%\"\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: defaultStyles.colors.gold,\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    fontSize: \"20\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    gender: state.matchAndMemory.userProfile.gender,\n    userLanguage: state.matchAndMemory.userProfile.userLanguage,\n    languageToLearn: state.matchAndMemory.gameSettings.languageToLearn\n  };\n};\n\nexport default connect(mapStateToProps)(UserProfileScreen);","map":{"version":3,"sources":["/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/UserProfileScreen.js"],"names":["React","useState","useEffect","connect","setProfile","ButtonMain","defaultStyles","Screen","ScreenHeader","OptionsButton","Text","VertScrollSelector","scrollOptions","UserProfileScreen","dispatch","navigation","gender","userLanguage","languageToLearn","newProfile","setNewProfile","isFemale","setIsFemale","modalVisible","setModalVisible","console","log","handleSelectGender","handleSaveProfile","navigate","styles","screen","centeredView","modalView","modalText","button","buttonClose","textStyle","goBack","require","optionsContainer","optionLabel","optionText","genderInfoButton","genderHelp","genderButtons","languageField","languageSelector","saveButton","StyleSheet","create","flexDirection","justifyContent","width","height","resizeMode","backgroundColor","colors","gold","borderRadius","position","right","top","alignItems","marginVertical","color","white","fontSize","marginTop","flex","margin","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonOpen","fontWeight","textAlign","marginBottom","mapStateToProps","state","matchAndMemory","userProfile","gameSettings"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tAlert,\n\tModal,\n\tStyleSheet,\n\tTouchableOpacity,\n\tView,\n\tImage,\n\tPressable,\n} from \"react-native\";\n\n// redux\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../store/MandMActions\";\n\n// components\nimport ButtonMain from \"../components/ButtonMain\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"../components/Screen\";\nimport ScreenHeader from \"../components/ScreenHeader\";\nimport OptionsButton from \"../components/OptionsButton\";\nimport Text from \"../components/Text\";\nimport VertScrollSelector from \"../components/VertScrollSelector\";\n\n// TODO: will need to get this from the data\nconst scrollOptions = [\n\t\"English\",\n\t\"Spanish\",\n\t\"French\",\n\t\"Italian\",\n\t\"German\",\n\t\"Russian\",\n];\n\nfunction UserProfileScreen({ dispatch, navigation, gender, userLanguage }) {\n\tconst [newProfile, setNewProfile] = useState({\n\t\tgender: gender,\n\t\tuserLanguage: userLanguage,\n\t\tlanguageToLearn: null,\n\t});\n\tconst [isFemale, setIsFemale] = useState(true);\n\tconst [modalVisible, setModalVisible] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetNewProfile({\n\t\t\tgender: gender,\n\t\t\tuserLanguage: userLanguage,\n\t\t\tlanguageToLearn: null,\n\t\t});\n\t}, []);\n\n\tconsole.log(\"newProfile: \", newProfile);\n\n\tconst handleSelectGender = gender => {\n\t\tsetIsFemale(gender === \"female\");\n\t\tsetNewProfile({\n\t\t\t...newProfile,\n\t\t\tgender: gender,\n\t\t});\n\t};\n\n\tconst handleSaveProfile = () => {\n\t\tdispatch(setProfile(newProfile));\n\t\tnavigation.navigate(\"LevelSelect\");\n\t};\n\n\treturn (\n\t\t<Screen screen={true} style={styles.screen}>\n\t\t\t<Modal\n\t\t\t\tanimationType=\"slide\"\n\t\t\t\ttransparent={true}\n\t\t\t\tvisible={modalVisible}\n\t\t\t\tonRequestClose={() => {\n\t\t\t\t\tsetModalVisible(!modalVisible);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<View style={styles.centeredView}>\n\t\t\t\t\t<View style={styles.modalView}>\n\t\t\t\t\t\t<Text style={styles.modalText}>\n\t\t\t\t\t\t\tSome languages affect the words or conjugations they use depending\n\t\t\t\t\t\t\ton the gender of the speaker and/or the responder.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Pressable\n\t\t\t\t\t\t\tstyle={[styles.button, styles.buttonClose]}\n\t\t\t\t\t\t\tonPress={() => setModalVisible(!modalVisible)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text style={styles.textStyle}>Hide Modal</Text>\n\t\t\t\t\t\t</Pressable>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</Modal>\n\t\t\t<ScreenHeader\n\t\t\t\tnavLeft={() => navigation.goBack()}\n\t\t\t\tnavLeftIcon={require(\"../assets/buttons/back_icon_dark.png\")}\n\t\t\t\tshowRightButton={false}\n\t\t\t\ttitle=\"User Profile\"\n\t\t\t\ttitleOffset={20}\n\t\t\t/>\n\t\t\t<View style={styles.optionsContainer}>\n\t\t\t\t<View style={styles.optionLabel}>\n\t\t\t\t\t<Text style={styles.optionText} fontFam=\"bowlby\">\n\t\t\t\t\t\tGender\n\t\t\t\t\t</Text>\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t// TODO: insert modal for gender info\n\t\t\t\t\t\t\tsetModalVisible(!modalVisible);\n\t\t\t\t\t\t\tconsole.log(\" Gender help is pushed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={styles.genderInfoButton}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tstyle={styles.genderHelp}\n\t\t\t\t\t\t\tsource={require(\"../assets/buttons/help_icon_light.png\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={styles.genderButtons}>\n\t\t\t\t\t<OptionsButton\n\t\t\t\t\t\tisSelected={isFemale}\n\t\t\t\t\t\tonPress={() => handleSelectGender(\"female\")}\n\t\t\t\t\t>\n\t\t\t\t\t\tFemale\n\t\t\t\t\t</OptionsButton>\n\t\t\t\t\t<OptionsButton\n\t\t\t\t\t\tisSelected={!isFemale}\n\t\t\t\t\t\tonPress={() => handleSelectGender(\"male\")}\n\t\t\t\t\t>\n\t\t\t\t\t\tMale\n\t\t\t\t\t</OptionsButton>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t{/* TODO: create selection for user's known language */}\n\n\t\t\t<View style={styles.optionsContainer}>\n\t\t\t\t<View style={styles.optionLabel}>\n\t\t\t\t\t<Text style={styles.optionText} fontFam=\"bowlby\">\n\t\t\t\t\t\tLearning\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.languageField}>\n\t\t\t\t\t<VertScrollSelector\n\t\t\t\t\t\tscrollOptions={scrollOptions}\n\t\t\t\t\t\tstyle={styles.languageSelector}\n\t\t\t\t\t\tsetNewProfile={setNewProfile}\n\t\t\t\t\t\tprofile={newProfile}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t{newProfile.languageToLearn && (\n\t\t\t\t<ButtonMain\n\t\t\t\t\tonPress={handleSaveProfile}\n\t\t\t\t\tstyle={styles.saveButton}\n\t\t\t\t\ttitle=\"Save\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Screen>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tscreen: {},\n\tgenderButtons: {\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"space-evenly\",\n\t\twidth: \"100%\",\n\t},\n\tgenderHelp: {\n\t\theight: \"100%\",\n\t\tresizeMode: \"contain\",\n\t\twidth: \"100%\",\n\t},\n\tgenderInfoButton: {\n\t\tbackgroundColor: defaultStyles.colors.gold,\n\t\tborderRadius: 13,\n\t\theight: 26,\n\t\tposition: \"absolute\",\n\t\tright: -20,\n\t\ttop: 0,\n\t\twidth: 26,\n\t},\n\tlanguageField: {\n\t\twidth: \"80%\",\n\t},\n\tlanguageSelector: {\n\t\twidth: \"100%\",\n\t},\n\toptionsContainer: {\n\t\talignItems: \"center\",\n\t\tmarginVertical: 30,\n\t},\n\toptionLabel: {},\n\toptionText: {\n\t\tcolor: defaultStyles.colors.white,\n\t\tfontSize: 50,\n\t},\n\tsaveButton: {\n\t\tmarginTop: 80,\n\t\twidth: \"100%\",\n\t},\n\tcenteredView: {\n\t\tflex: 1,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tmarginTop: 22,\n\t},\n\tmodalView: {\n\t\tmargin: 20,\n\t\tbackgroundColor: defaultStyles.colors.gold,\n\t\tborderRadius: 20,\n\t\tpadding: 35,\n\t\talignItems: \"center\",\n\t\tshadowColor: \"#000\",\n\t\tshadowOffset: {\n\t\t\twidth: 0,\n\t\t\theight: 2,\n\t\t},\n\t\tshadowOpacity: 0.25,\n\t\tshadowRadius: 4,\n\t\televation: 5,\n\t},\n\tbutton: {\n\t\tborderRadius: 20,\n\t\tpadding: 10,\n\t\televation: 2,\n\t},\n\tbuttonOpen: {\n\t\tbackgroundColor: \"#F194FF\",\n\t},\n\tbuttonClose: {\n\t\tbackgroundColor: \"#2196F3\",\n\t},\n\ttextStyle: {\n\t\tcolor: \"white\",\n\t\tfontWeight: \"bold\",\n\t\ttextAlign: \"center\",\n\t},\n\tmodalText: {\n\t\tmarginBottom: 15,\n\t\ttextAlign: \"center\",\n\t\tfontSize: \"20\",\n\t},\n});\n\nconst mapStateToProps = state => ({\n\tgender: state.matchAndMemory.userProfile.gender,\n\tuserLanguage: state.matchAndMemory.userProfile.userLanguage,\n\tlanguageToLearn: state.matchAndMemory.gameSettings.languageToLearn,\n});\n\nexport default connect(mapStateToProps)(UserProfileScreen);\n"]},"metadata":{},"sourceType":"module"}