{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\super\\\\Documents\\\\michaelthegreat\\\\speaq_match\\\\app\\\\screens\\\\UserProfileScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../store/MandMActions\";\nimport ButtonMain from \"../components/ButtonMain\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"../components/Screen\";\nimport ScreenHeader from \"../components/ScreenHeader\";\nimport OptionsButton from \"../components/OptionsButton\";\nimport Text from \"../components/Text\";\nimport VertScrollSelector from \"../components/VertScrollSelector\";\nvar scrollOptions = [\"English\", \"Spanish\", \"French\", \"Italian\", \"German\", \"Russian\"];\nvar initialProfile = {\n  gender: null,\n  userLanguage: \"english\",\n  languageToLearn: null\n};\n\nfunction UserProfileScreen(_ref) {\n  var navigation = _ref.navigation,\n      gameState = _ref.gameState,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(initialProfile),\n      _useState2 = _slicedToArray(_useState, 2),\n      newProfile = _useState2[0],\n      setNewProfile = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFemale = _useState4[0],\n      setIsFemale = _useState4[1];\n\n  var handleSelectGender = function handleSelectGender(gender) {\n    setIsFemale(gender === \"female\");\n    setNewProfile(_objectSpread(_objectSpread({}, newProfile), {}, {\n      gender: gender\n    }));\n  };\n\n  var handleSaveProfile = function handleSaveProfile() {\n    dispatch(setProfile(newProfile));\n    navigation.navigate(\"LevelSelect\");\n  };\n\n  return React.createElement(Screen, {\n    screen: true,\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, React.createElement(ScreenHeader, {\n    navLeft: function navLeft() {\n      return navigation.goBack();\n    },\n    navLeftIcon: require(\"../assets/buttons/back_icon_dark.png\"),\n    showRightButton: false,\n    title: \"User Profile\",\n    titleOffset: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.optionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.optionLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    fontFam: \"bowlby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }, \"Gender\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      console.log(\" Gender help is pushed\");\n    },\n    style: styles.genderInfoButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, React.createElement(Image, {\n    style: styles.genderHelp,\n    source: require(\"../assets/buttons/help_icon_light.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }))), React.createElement(View, {\n    style: styles.genderButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(OptionsButton, {\n    isSelected: isFemale,\n    onPress: function onPress() {\n      return handleSelectGender(\"female\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, \"Female\"), React.createElement(OptionsButton, {\n    isSelected: !isFemale,\n    onPress: function onPress() {\n      return handleSelectGender(\"male\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 6\n    }\n  }, \"Male\"))), React.createElement(View, {\n    style: styles.optionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.optionLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    fontFam: \"bowlby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }, \"Learning\")), React.createElement(View, {\n    style: styles.languageField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, React.createElement(VertScrollSelector, {\n    scrollOptions: scrollOptions,\n    style: styles.languageSelector,\n    setNewProfile: setNewProfile,\n    profile: newProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 6\n    }\n  }))), newProfile.languageToLearn && React.createElement(ButtonMain, {\n    onPress: handleSaveProfile,\n    style: styles.saveButton,\n    title: \"Save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {},\n  genderButtons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\"\n  },\n  genderHelp: {\n    height: \"100%\",\n    resizeMode: \"contain\",\n    width: \"100%\"\n  },\n  genderInfoButton: {\n    backgroundColor: defaultStyles.colors.gold,\n    borderRadius: 13,\n    height: 26,\n    position: \"absolute\",\n    right: -20,\n    top: 0,\n    width: 26\n  },\n  languageField: {\n    width: \"80%\"\n  },\n  languageSelector: {\n    width: \"100%\"\n  },\n  optionsContainer: {\n    alignItems: \"center\",\n    marginVertical: 30\n  },\n  optionLabel: {},\n  optionText: {\n    color: defaultStyles.colors.white,\n    fontSize: 50\n  },\n  saveButton: {\n    marginTop: 80,\n    width: \"100%\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    gameState: state.matchAndMemory\n  };\n};\n\nexport default connect(mapStateToProps)(UserProfileScreen);","map":{"version":3,"sources":["C:/Users/super/Documents/michaelthegreat/speaq_match/app/screens/UserProfileScreen.js"],"names":["React","useState","connect","setProfile","ButtonMain","defaultStyles","Screen","ScreenHeader","OptionsButton","Text","VertScrollSelector","scrollOptions","initialProfile","gender","userLanguage","languageToLearn","UserProfileScreen","navigation","gameState","dispatch","newProfile","setNewProfile","isFemale","setIsFemale","handleSelectGender","handleSaveProfile","navigate","styles","screen","goBack","require","optionsContainer","optionLabel","optionText","console","log","genderInfoButton","genderHelp","genderButtons","languageField","languageSelector","saveButton","StyleSheet","create","flexDirection","justifyContent","width","height","resizeMode","backgroundColor","colors","gold","borderRadius","position","right","top","alignItems","marginVertical","color","white","fontSize","marginTop","mapStateToProps","state","matchAndMemory"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, TouchableOpacity, View, Image } from \"react-native\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport { setProfile } from \"../../store/MandMActions\";\r\n\r\n// components\r\nimport ButtonMain from \"../components/ButtonMain\";\r\nimport defaultStyles from \"../config/styles\";\r\nimport Screen from \"../components/Screen\";\r\nimport ScreenHeader from \"../components/ScreenHeader\";\r\nimport OptionsButton from \"../components/OptionsButton\";\r\nimport Text from \"../components/Text\";\r\nimport VertScrollSelector from \"../components/VertScrollSelector\";\r\n\r\n// TODO: will need to get this from the data\r\nconst scrollOptions = [\r\n\t\"English\",\r\n\t\"Spanish\",\r\n\t\"French\",\r\n\t\"Italian\",\r\n\t\"German\",\r\n\t\"Russian\",\r\n];\r\n\r\nconst initialProfile = {\r\n\tgender: null,\r\n\tuserLanguage: \"english\",\r\n\tlanguageToLearn: null,\r\n};\r\n\r\nfunction UserProfileScreen({ navigation, gameState, dispatch }) {\r\n\tconst [newProfile, setNewProfile] = useState(initialProfile);\r\n\tconst [isFemale, setIsFemale] = useState(true);\r\n\r\n\tconst handleSelectGender = gender => {\r\n\t\tsetIsFemale(gender === \"female\");\r\n\t\tsetNewProfile({\r\n\t\t\t...newProfile,\r\n\t\t\tgender: gender,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleSaveProfile = () => {\r\n\t\tdispatch(setProfile(newProfile));\r\n\t\tnavigation.navigate(\"LevelSelect\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Screen screen={true} style={styles.screen}>\r\n\t\t\t<ScreenHeader\r\n\t\t\t\tnavLeft={() => navigation.goBack()}\r\n\t\t\t\tnavLeftIcon={require(\"../assets/buttons/back_icon_dark.png\")}\r\n\t\t\t\tshowRightButton={false}\r\n\t\t\t\ttitle=\"User Profile\"\r\n\t\t\t\ttitleOffset={20}\r\n\t\t\t/>\r\n\t\t\t<View style={styles.optionsContainer}>\r\n\t\t\t\t<View style={styles.optionLabel}>\r\n\t\t\t\t\t<Text style={styles.optionText} fontFam=\"bowlby\">\r\n\t\t\t\t\t\tGender\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t// TODO: insert modal for gender info\r\n\t\t\t\t\t\t\tconsole.log(\" Gender help is pushed\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tstyle={styles.genderInfoButton}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tstyle={styles.genderHelp}\r\n\t\t\t\t\t\t\tsource={require(\"../assets/buttons/help_icon_light.png\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<View style={styles.genderButtons}>\r\n\t\t\t\t\t<OptionsButton\r\n\t\t\t\t\t\tisSelected={isFemale}\r\n\t\t\t\t\t\tonPress={() => handleSelectGender(\"female\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tFemale\r\n\t\t\t\t\t</OptionsButton>\r\n\t\t\t\t\t<OptionsButton\r\n\t\t\t\t\t\tisSelected={!isFemale}\r\n\t\t\t\t\t\tonPress={() => handleSelectGender(\"male\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tMale\r\n\t\t\t\t\t</OptionsButton>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\r\n\t\t\t{/* TODO: create selection for user's known language */}\r\n\r\n\t\t\t<View style={styles.optionsContainer}>\r\n\t\t\t\t<View style={styles.optionLabel}>\r\n\t\t\t\t\t<Text style={styles.optionText} fontFam=\"bowlby\">\r\n\t\t\t\t\t\tLearning\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.languageField}>\r\n\t\t\t\t\t<VertScrollSelector\r\n\t\t\t\t\t\tscrollOptions={scrollOptions}\r\n\t\t\t\t\t\tstyle={styles.languageSelector}\r\n\t\t\t\t\t\tsetNewProfile={setNewProfile}\r\n\t\t\t\t\t\tprofile={newProfile}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\r\n\t\t\t{newProfile.languageToLearn && (\r\n\t\t\t\t<ButtonMain\r\n\t\t\t\t\tonPress={handleSaveProfile}\r\n\t\t\t\t\tstyle={styles.saveButton}\r\n\t\t\t\t\ttitle=\"Save\"\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Screen>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tscreen: {},\r\n\tgenderButtons: {\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tgenderHelp: {\r\n\t\theight: \"100%\",\r\n\t\tresizeMode: \"contain\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tgenderInfoButton: {\r\n\t\tbackgroundColor: defaultStyles.colors.gold,\r\n\t\tborderRadius: 13,\r\n\t\theight: 26,\r\n\t\tposition: \"absolute\",\r\n\t\tright: -20,\r\n\t\ttop: 0,\r\n\t\twidth: 26,\r\n\t},\r\n\tlanguageField: {\r\n\t\twidth: \"80%\",\r\n\t},\r\n\tlanguageSelector: {\r\n\t\twidth: \"100%\",\r\n\t},\r\n\toptionsContainer: {\r\n\t\talignItems: \"center\",\r\n\t\tmarginVertical: 30,\r\n\t},\r\n\toptionLabel: {},\r\n\toptionText: {\r\n\t\tcolor: defaultStyles.colors.white,\r\n\t\tfontSize: 50,\r\n\t},\r\n\tsaveButton: {\r\n\t\tmarginTop: 80,\r\n\t\twidth: \"100%\",\r\n\t},\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n\tgameState: state.matchAndMemory,\r\n});\r\n\r\nexport default connect(mapStateToProps)(UserProfileScreen);\r\n"]},"metadata":{},"sourceType":"module"}