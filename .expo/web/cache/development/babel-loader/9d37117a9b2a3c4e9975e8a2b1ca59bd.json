{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/UserProfileScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../store/profileAction\";\nimport ButtonMain from \"../components/ButtonMain\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"../components/Screen\";\nimport ScreenHeader from \"../components/ScreenHeader\";\nimport OptionsButton from \"../components/OptionsButton\";\nimport Text from \"../components/Text\";\nimport VertScrollSelector from \"../components/VertScrollSelector\";\nvar scrollOptions = [\"English\", \"Spanish\", \"French\", \"Italian\", \"German\", \"Russian\"];\nvar initialProfile = {\n  gender: \"\",\n  language_to_learn: scrollOptions[0]\n};\n\nfunction UserProfileScreen(_ref) {\n  var navigation = _ref.navigation,\n      gameState = _ref.gameState,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(initialProfile),\n      _useState2 = _slicedToArray(_useState, 2),\n      newProfile = _useState2[0],\n      setNewProfile = _useState2[1];\n\n  var handleSaveProfile = function handleSaveProfile() {\n    dispatch(setProfile(newProfile));\n    navigation.navigate(\"LevelSelect\");\n  };\n\n  return React.createElement(Screen, {\n    screen: true,\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, React.createElement(ScreenHeader, {\n    navLeft: function navLeft() {\n      return navigation.goBack();\n    },\n    navLeftIcon: require(\"../assets/buttons/back_icon_dark.png\"),\n    showRightButton: false,\n    title: \"User Profile\",\n    titleOffset: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.optionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.optionLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    fontFam: \"bowlby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  }, \"Gender\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      console.log(\" Gender help is pushed\");\n    },\n    style: styles.genderInfoButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }, React.createElement(Image, {\n    style: styles.genderHelp,\n    source: require(\"../assets/buttons/help_icon_light.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }))), React.createElement(View, {\n    style: styles.genderButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(OptionsButton, {\n    name: \"Male\",\n    onPress: function onPress() {\n      console.log(\"male button pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }), React.createElement(OptionsButton, {\n    name: \"Female\",\n    onPress: function onPress() {\n      console.log(\"female button pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }))), React.createElement(View, {\n    style: styles.optionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.optionLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    fontFam: \"bowlby\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }, \"Learning\")), React.createElement(View, {\n    style: styles.languageField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(VertScrollSelector, {\n    scrollOptions: scrollOptions,\n    style: styles.languageSelector,\n    setNewProfile: setNewProfile,\n    profile: newProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }\n  }))), React.createElement(ButtonMain, {\n    onPress: handleSaveProfile,\n    style: styles.saveButton,\n    title: \"Save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {},\n  genderButtons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\"\n  },\n  genderHelp: {\n    height: \"100%\",\n    resizeMode: \"contain\",\n    width: \"100%\"\n  },\n  genderInfoButton: {\n    backgroundColor: defaultStyles.colors.gold,\n    borderRadius: 13,\n    height: 26,\n    position: \"absolute\",\n    right: -20,\n    top: 0,\n    width: 26\n  },\n  languageField: {\n    width: \"80%\"\n  },\n  languageSelector: {\n    width: \"100%\"\n  },\n  optionsContainer: {\n    alignItems: \"center\",\n    marginVertical: 30\n  },\n  optionLabel: {},\n  optionText: {\n    color: defaultStyles.colors.white,\n    fontSize: 50\n  },\n  saveButton: {\n    marginTop: 80,\n    width: \"100%\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    gameState: state.matchAndMemory\n  };\n};\n\nexport default connect(mapStateToProps)(UserProfileScreen);","map":{"version":3,"sources":["/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/UserProfileScreen.js"],"names":["React","useState","connect","setProfile","ButtonMain","defaultStyles","Screen","ScreenHeader","OptionsButton","Text","VertScrollSelector","scrollOptions","initialProfile","gender","language_to_learn","UserProfileScreen","navigation","gameState","dispatch","newProfile","setNewProfile","handleSaveProfile","navigate","styles","screen","goBack","require","optionsContainer","optionLabel","optionText","console","log","genderInfoButton","genderHelp","genderButtons","languageField","languageSelector","saveButton","StyleSheet","create","flexDirection","justifyContent","width","height","resizeMode","backgroundColor","colors","gold","borderRadius","position","right","top","alignItems","marginVertical","color","white","fontSize","marginTop","mapStateToProps","state","matchAndMemory"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, TouchableOpacity, View, Image } from \"react-native\";\n\n// redux\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../store/profileAction\";\n\n// components\nimport ButtonMain from \"../components/ButtonMain\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"../components/Screen\";\nimport ScreenHeader from \"../components/ScreenHeader\";\nimport OptionsButton from \"../components/OptionsButton\";\nimport Text from \"../components/Text\";\nimport VertScrollSelector from \"../components/VertScrollSelector\";\n\n// TODO: will need to get this from the data\nconst scrollOptions = [\n\t\"English\",\n\t\"Spanish\",\n\t\"French\",\n\t\"Italian\",\n\t\"German\",\n\t\"Russian\",\n];\n\nconst initialProfile = {\n\tgender: \"\",\n\tlanguage_to_learn: scrollOptions[0],\n};\n\nfunction UserProfileScreen({ navigation, gameState, dispatch }) {\n\tconst [newProfile, setNewProfile] = useState(initialProfile);\n\n\tconst handleSaveProfile = () => {\n\t\tdispatch(setProfile(newProfile));\n\t\tnavigation.navigate(\"LevelSelect\");\n\t};\n\n\treturn (\n\t\t<Screen screen={true} style={styles.screen}>\n\t\t\t<ScreenHeader\n\t\t\t\tnavLeft={() => navigation.goBack()}\n\t\t\t\tnavLeftIcon={require(\"../assets/buttons/back_icon_dark.png\")}\n\t\t\t\tshowRightButton={false}\n\t\t\t\ttitle=\"User Profile\"\n\t\t\t\ttitleOffset={20}\n\t\t\t/>\n\t\t\t<View style={styles.optionsContainer}>\n\t\t\t\t<View style={styles.optionLabel}>\n\t\t\t\t\t<Text style={styles.optionText} fontFam=\"bowlby\">\n\t\t\t\t\t\tGender\n\t\t\t\t\t</Text>\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t// TODO: insert modal for gender info\n\t\t\t\t\t\t\tconsole.log(\" Gender help is pushed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={styles.genderInfoButton}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tstyle={styles.genderHelp}\n\t\t\t\t\t\t\tsource={require(\"../assets/buttons/help_icon_light.png\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={styles.genderButtons}>\n\t\t\t\t\t<OptionsButton\n\t\t\t\t\t\tname=\"Male\"\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t// TODO: toggle the gender button\n\t\t\t\t\t\t\tconsole.log(\"male button pressed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<OptionsButton\n\t\t\t\t\t\tname=\"Female\"\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t// TODO: toggle the gender button\n\t\t\t\t\t\t\tconsole.log(\"female button pressed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t<View style={styles.optionsContainer}>\n\t\t\t\t<View style={styles.optionLabel}>\n\t\t\t\t\t<Text style={styles.optionText} fontFam=\"bowlby\">\n\t\t\t\t\t\tLearning\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.languageField}>\n\t\t\t\t\t<VertScrollSelector\n\t\t\t\t\t\tscrollOptions={scrollOptions}\n\t\t\t\t\t\tstyle={styles.languageSelector}\n\t\t\t\t\t\tsetNewProfile={setNewProfile}\n\t\t\t\t\t\tprofile={newProfile}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t<ButtonMain\n\t\t\t\tonPress={handleSaveProfile}\n\t\t\t\tstyle={styles.saveButton}\n\t\t\t\ttitle=\"Save\"\n\t\t\t/>\n\t\t</Screen>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tscreen: {},\n\tgenderButtons: {\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"space-evenly\",\n\t\twidth: \"100%\",\n\t},\n\tgenderHelp: {\n\t\theight: \"100%\",\n\t\tresizeMode: \"contain\",\n\t\twidth: \"100%\",\n\t},\n\tgenderInfoButton: {\n\t\tbackgroundColor: defaultStyles.colors.gold,\n\t\tborderRadius: 13,\n\t\theight: 26,\n\t\tposition: \"absolute\",\n\t\tright: -20,\n\t\ttop: 0,\n\t\twidth: 26,\n\t},\n\tlanguageField: {\n\t\twidth: \"80%\",\n\t},\n\tlanguageSelector: {\n\t\twidth: \"100%\",\n\t},\n\toptionsContainer: {\n\t\talignItems: \"center\",\n\t\tmarginVertical: 30,\n\t},\n\toptionLabel: {},\n\toptionText: {\n\t\tcolor: defaultStyles.colors.white,\n\t\tfontSize: 50,\n\t},\n\tsaveButton: {\n\t\tmarginTop: 80,\n\t\twidth: \"100%\",\n\t},\n});\n\nconst mapStateToProps = state => ({\n\tgameState: state.matchAndMemory,\n});\n\nexport default connect(mapStateToProps)(UserProfileScreen);\n"]},"metadata":{},"sourceType":"module"}