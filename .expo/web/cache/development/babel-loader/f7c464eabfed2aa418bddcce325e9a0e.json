{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/UserProfileScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useSelector } from \"react-redux\";\nimport ButtonMain from \"../components/ButtonMain\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"../components/Screen\";\nimport ScreenHeader from \"../components/ScreenHeader\";\nimport OptionsButton from \"../components/OptionsButton\";\nimport Text from \"../components/Text\";\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../store/profileAction\";\nvar initialProfile = {\n  gender: \"male\",\n  language: \"english\"\n};\n\nfunction UserProfileScreen(_ref) {\n  var navigation = _ref.navigation,\n      gameState = _ref.gameState,\n      setProfile = _ref.setProfile,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(initialProfile),\n      _useState2 = _slicedToArray(_useState, 2),\n      newProfile = _useState2[0],\n      setNewProfile = _useState2[1];\n\n  var handleSaveProfile = function handleSaveProfile() {\n    dispatch(setProfile(newProfile));\n    navigation.navigate(\"LevelSelect\");\n  };\n\n  var user_profile = useSelector(function (state) {\n    return state.user_profile;\n  });\n  return React.createElement(Screen, {\n    screen: true,\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, React.createElement(ScreenHeader, {\n    navLeft: function navLeft() {\n      return navigation.goBack();\n    },\n    navLeftIcon: require(\"../assets/buttons/back_icon_dark.png\"),\n    showRightButton: false,\n    title: \"User Profile\",\n    titleOffset: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.genderContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.genderLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.genderText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, \"Gender\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      console.log(\"help is pushed\");\n    },\n    style: styles.genderInfoButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, React.createElement(Image, {\n    style: styles.genderHelp,\n    source: require(\"../assets/buttons/help_icon_light.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }))), React.createElement(View, {\n    style: styles.genderButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(OptionsButton, {\n    name: \"Male\",\n    onPress: function onPress() {\n      console.log(\"male button pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  }), React.createElement(OptionsButton, {\n    name: \"Female\",\n    onPress: function onPress() {\n      console.log(\"female button pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }))), React.createElement(View, {\n    style: styles.genderContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.genderLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.genderText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }, \"Language\")), React.createElement(View, {\n    style: styles.genderButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(OptionsButton, {\n    name: \"Italian\",\n    onPress: function onPress() {\n      console.log(\"italian button pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }))), React.createElement(ButtonMain, {\n    onPress: handleSaveProfile,\n    style: styles.saveButton,\n    title: \"Save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  screen: {},\n  genderButtons: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\"\n  },\n  genderContainer: {\n    alignItems: \"center\",\n    marginVertical: 40\n  },\n  genderInfoButton: {\n    backgroundColor: defaultStyles.colors.gold,\n    borderRadius: 13,\n    position: \"absolute\",\n    top: 0,\n    right: -20,\n    height: 26,\n    width: 26\n  },\n  genderHelp: {\n    resizeMode: \"contain\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  genderLabel: {},\n  genderText: {\n    fontSize: 50,\n    color: defaultStyles.colors.white\n  },\n  saveButton: {\n    width: \"100%\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    gameState: state.matchAndMemory\n  };\n};\n\nvar mapActionsToProps = {\n  setProfile: setProfile,\n  dispatch: dispatch\n};\nexport default connect(mapStateToProps, mapStateToProps)(UserProfileScreen);","map":{"version":3,"sources":["/Users/Habermoose/Desktop/speaq_rn/speaq_match/app/screens/UserProfileScreen.js"],"names":["React","useState","useSelector","ButtonMain","defaultStyles","Screen","ScreenHeader","OptionsButton","Text","connect","setProfile","initialProfile","gender","language","UserProfileScreen","navigation","gameState","dispatch","newProfile","setNewProfile","handleSaveProfile","navigate","user_profile","state","styles","screen","goBack","require","genderContainer","genderLabel","genderText","console","log","genderInfoButton","genderHelp","genderButtons","saveButton","StyleSheet","create","flexDirection","width","justifyContent","alignItems","marginVertical","backgroundColor","colors","gold","borderRadius","position","top","right","height","resizeMode","fontSize","color","white","mapStateToProps","matchAndMemory","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, TouchableOpacity, View, Image } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nimport ButtonMain from \"../components/ButtonMain\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"../components/Screen\";\nimport ScreenHeader from \"../components/ScreenHeader\";\nimport OptionsButton from \"../components/OptionsButton\";\nimport Text from \"../components/Text\";\n\n// redux\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../store/profileAction\";\n\nconst initialProfile = {\n\tgender: \"male\",\n\tlanguage: \"english\",\n};\n\nfunction UserProfileScreen({ navigation, gameState, setProfile, dispatch }) {\n\tconst [newProfile, setNewProfile] = useState(initialProfile);\n\n\tconst handleSaveProfile = () => {\n\t\tdispatch(setProfile(newProfile));\n\t\tnavigation.navigate(\"LevelSelect\");\n\t};\n\n\tconst user_profile = useSelector(state => state.user_profile);\n\treturn (\n\t\t<Screen screen={true} style={styles.screen}>\n\t\t\t<ScreenHeader\n\t\t\t\tnavLeft={() => navigation.goBack()}\n\t\t\t\tnavLeftIcon={require(\"../assets/buttons/back_icon_dark.png\")}\n\t\t\t\tshowRightButton={false}\n\t\t\t\ttitle=\"User Profile\"\n\t\t\t\ttitleOffset={20}\n\t\t\t/>\n\t\t\t<View style={styles.genderContainer}>\n\t\t\t\t<View style={styles.genderLabel}>\n\t\t\t\t\t<Text style={styles.genderText}>Gender</Text>\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tconsole.log(\"help is pushed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={styles.genderInfoButton}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tstyle={styles.genderHelp}\n\t\t\t\t\t\t\tsource={require(\"../assets/buttons/help_icon_light.png\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={styles.genderButtons}>\n\t\t\t\t\t<OptionsButton\n\t\t\t\t\t\tname=\"Male\"\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tconsole.log(\"male button pressed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<OptionsButton\n\t\t\t\t\t\tname=\"Female\"\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tconsole.log(\"female button pressed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t<View style={styles.genderContainer}>\n\t\t\t\t<View style={styles.genderLabel}>\n\t\t\t\t\t<Text style={styles.genderText}>Language</Text>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.genderButtons}>\n\t\t\t\t\t<OptionsButton\n\t\t\t\t\t\tname=\"Italian\"\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tconsole.log(\"italian button pressed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t<ButtonMain\n\t\t\t\tonPress={handleSaveProfile}\n\t\t\t\tstyle={styles.saveButton}\n\t\t\t\ttitle=\"Save\"\n\t\t\t/>\n\t\t</Screen>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tscreen: {},\n\tgenderButtons: {\n\t\tflexDirection: \"row\",\n\t\twidth: \"100%\",\n\t\tjustifyContent: \"space-evenly\",\n\t},\n\tgenderContainer: {\n\t\talignItems: \"center\",\n\t\tmarginVertical: 40,\n\t},\n\tgenderInfoButton: {\n\t\tbackgroundColor: defaultStyles.colors.gold,\n\t\tborderRadius: 13,\n\t\tposition: \"absolute\",\n\t\ttop: 0,\n\t\tright: -20,\n\t\theight: 26,\n\t\twidth: 26,\n\t},\n\tgenderHelp: {\n\t\tresizeMode: \"contain\",\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\tgenderLabel: {},\n\tgenderText: {\n\t\tfontSize: 50,\n\t\tcolor: defaultStyles.colors.white,\n\t},\n\tsaveButton: {\n\t\twidth: \"100%\",\n\t},\n});\n\nconst mapStateToProps = state => ({\n\tgameState: state.matchAndMemory,\n});\n\nconst mapActionsToProps = {\n\tsetProfile,\n\tdispatch,\n};\n\nexport default connect(mapStateToProps, mapStateToProps)(UserProfileScreen);\n"]},"metadata":{},"sourceType":"module"}